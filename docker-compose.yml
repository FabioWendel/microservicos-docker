version: '3'

services:
  gateway:
    image: ms-gateway
    container_name: "ms-gateway"
    build:
      context: "./ms-gateway"
      dockerfile: "Dockerfile"
    ports:
      - 3000:3000
    volumes:
      - ./ms-gateway:/usr/src/app

  backend_users:
    image: ms-users
    container_name: "ms-users"
    build:
      context: "./ms-users"
      dockerfile: "Dockerfile"
    ports:
      - 3333:3333
    depends_on:
      - gateway
      - database_ms-users
    volumes:
      - ./ms-users:/usr/src/app

  database_ms-users:
    container_name: "bd-ms-users"
    image: 'postgres:alpine'
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ms-users
      - TZ=GMT

  backend_financial:
    image: ms-financial
    container_name: "ms-financial"
    build:
      context: "./ms-financial"
      dockerfile: "Dockerfile"
    ports:
      - 3334:3334
    depends_on:
      - gateway
      - database_financial
    volumes:
      - ./ms-financial:/usr/src/app

  database_financial:
    container_name: "bd-ms-financial"
    image: 'postgres:alpine'
    ports:
      - '5435:5432'
    volumes:
      - pgdata2:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ms-financial
      - TZ=GMT

  zookeeper:
    container_name: "micro_zookeeper"
    image: 'bitnami/zookeeper:3'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    logging:
      driver: none

  kafka:
    container_name: "micro_kafka"
    image: 'bitnami/kafka:2'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://micro_kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    logging:
      driver: none

volumes:
  pgdata:
  pgdata2:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local